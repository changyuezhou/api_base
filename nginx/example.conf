
# 配置nginx运行时的用户身份,对web页面访问权限
user  root;

# 配置nginx工作线程数量,通常设置为 CPU核数量*2
worker_processes  1;

# 配置不同级别的LOG
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

# 配置nginx进程pid写文件路径
#pid        logs/nginx.pid;

# 配置nginx同时接受的连接数,根据内存和实际请求数配置,超过1024需要设置内核参数
events {
    worker_connections  1024;
}


http {
    # 包含处理类型文件
    include       mime.types;

    # 处理通用数据流
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';


    # 配置加速文件传输
    sendfile        on;
    #tcp_nopush     on;

    # 配置nginx连接时长,单位毫秒
    keepalive_timeout  1000;

    # 配置是否压缩
    #gzip  on;

    # 配置LUA初始化文件
    init_by_lua_file /usr/local/nginx/example/api/initial/init.lua;

    # 配置HTTP服务
    server {
        # 配置端口
        listen       8088;
        # 配置绑定域名
        server_name  _;

        # 配置WEB服务器首页路径
        root   /usr/local/nginx/example/web/dist;
        index  index.html index.htm;

        # 配置API跨域访问权限,此处全部开放
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Headers X-Requested-With;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS;

        # 配置字符集
        #charset koi8-r;

        # 配置访问落地日志,和上面log_format相对应
        #access_log  logs/host.access.log  main;
        # 配置日志落地路径和级别
        error_log /usr/local/nginx/example/logs/example_api_nginx_debug.log debug;

        # 配置访问路径
        location ^~/interface/example/ {
            default_type 'text/plain';
            content_by_lua_file /usr/local/nginx/example/api/interface/example.lua;
        }

        # 配置内部代理访问路径
        location ^~/proxy_auth/ {
            internal;
            rewrite ^/proxy_auth/(.*)        /$1 break;
            proxy_pass http://127.0.0.1:8080;
        }

        # 配置 vue route
        location / {
            try_files $uri $uri/ @router;
            index index.html;
        }

        # 配置 vue route
        location @router {
            rewrite ^.*$ /index.html last;
        }

        # 配置错误页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
